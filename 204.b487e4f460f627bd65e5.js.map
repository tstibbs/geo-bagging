{"version":3,"file":"204.b487e4f460f627bd65e5.js","mappings":"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","sources":["webpack://@tstibbs/geo-bagging-ui/./src/js/config.js","webpack://@tstibbs/geo-bagging-ui/./src/js/conversion.js","webpack://@tstibbs/geo-bagging-ui/./src/js/global.js","webpack://@tstibbs/geo-bagging-ui/./src/js/params.js","webpack://@tstibbs/geo-bagging-ui/./src/js/vendor-wrappers/leaflet.js","webpack://@tstibbs/geo-bagging-ui/./test/config_test.js"],"sourcesContent":["import leaflet from 'leaflet'\nimport $ from 'jquery'\nimport global from './global.js'\nimport params from './params.js'\nimport conversion from './conversion.js'\n\nvar defaultPageId = global.location.pathname.split('/').pop()\n\nvar defaults = {\n\tbaseUrl: window.geoBaggingBaseUrl != null ? window.geoBaggingBaseUrl : '',\n\tmap_style: 'full', //full, mini, embedded\n\tcluster: true,\n\tdimensional_layering: false,\n\tinitial_zoom: 13,\n\tstart_position: [53.374694, -1.711474], //lat, long\n\tforce_config_override: false, //if true, start position and zoom will be taken from config, not from local storage\n\tmap_element_id: 'map',\n\tmap_outer_container_element: $('body'),\n\tpage_id: defaultPageId,\n\tshow_zoom_control: true,\n\tshow_selection_control: true,\n\tshow_search_control: true,\n\tshow_locate_control: true,\n\tshow_layers_control: true,\n\tshow_position_control: true,\n\tshow_hider_control: 'mobile', // false, true, 'mobile'\n\tuse_sidebar: true,\n\thider_control_start_visible: true,\n\ticons: {},\n\tdimensionNames: [],\n\tdimensionValueLabels: {},\n\tdefaultLayer: 'OS',\n\tmarkerConstraints: null //e.g. will constrain it to show only those markers within a bounding boc\n}\n\nvar Config = leaflet.Class.extend({\n\tinitialize: function (options, configBundles) {\n\t\tvar resolvedConfig = $.extend({}, defaults, options)\n\t\tthis._checkForUndefaultedProperties(options, 'window config')\n\t\tresolvedConfig.bundles = configBundles\n\n\t\tthis._storageId = 'os_map:' + resolvedConfig.page_id + 'config'\n\n\t\tif (options == null || options.force_config_override !== true) {\n\t\t\t//check *options*, don't want to retrieve this persisted value\n\t\t\t//unless we've set the attribute to force override local config with the coded config, we should grab the local storage version and overwrite any matching keys\n\t\t\tvar saved = this._getSavedConfig()\n\t\t\tresolvedConfig = $.extend({}, resolvedConfig, saved)\n\t\t}\n\n\t\tif (params.test('startPosition')) {\n\t\t\t//lat, long\n\t\t\tresolvedConfig.start_position = params.test('startPosition').split(',')\n\t\t}\n\t\tif (params.test('startZoom')) {\n\t\t\tresolvedConfig.initial_zoom = params.test('startZoom')\n\t\t}\n\t\tthis._buildMarkerConstraints(resolvedConfig)\n\n\t\t//set all values locally so that the exporter object works like a hash\n\t\tfor (var property in resolvedConfig) {\n\t\t\tif (resolvedConfig.hasOwnProperty(property)) {\n\t\t\t\tthis[property] = resolvedConfig[property]\n\t\t\t}\n\t\t}\n\t},\n\n\t_buildMarkerConstraints: function (resolvedConfig) {\n\t\tvar constraintsString = null\n\t\tif (params.test('constraints') != null) {\n\t\t\t// params takes priority\n\t\t\tconstraintsString = params.test('constraints')\n\t\t} else if (resolvedConfig.markerConstraints != null && typeof resolvedConfig.markerConstraints == 'string') {\n\t\t\tconstraintsString = resolvedConfig.markerConstraints\n\t\t}\n\t\tif (constraintsString != null) {\n\t\t\tvar points = constraintsString.split(',')\n\t\t\tvar tlLat = null\n\t\t\tvar tlLng = null\n\t\t\tvar brLat = null\n\t\t\tvar brLng = null\n\t\t\tif (points.length == 2) {\n\t\t\t\t//must be os grid refs\n\t\t\t\tvar topLeft = conversion.gridRefToLngLat(points[0])\n\t\t\t\ttlLng = topLeft[0]\n\t\t\t\ttlLat = topLeft[1]\n\t\t\t\tvar bottomRight = conversion.gridRefToLngLat(points[1])\n\t\t\t\tbrLng = bottomRight[0]\n\t\t\t\tbrLat = bottomRight[1]\n\t\t\t} else {\n\t\t\t\t//lat,lng,lat,lng\n\t\t\t\ttlLat = parseFloat(points[0])\n\t\t\t\ttlLng = parseFloat(points[1])\n\t\t\t\tbrLat = parseFloat(points[2])\n\t\t\t\tbrLng = parseFloat(points[3])\n\t\t\t}\n\t\t\tresolvedConfig.markerConstraints = [\n\t\t\t\t[brLat, tlLng],\n\t\t\t\t[tlLat, brLng]\n\t\t\t] //<LatLng> southWest, <LatLng> northEast\n\t\t}\n\t\tif (resolvedConfig.markerConstraints != null && Array.isArray(resolvedConfig.markerConstraints)) {\n\t\t\tresolvedConfig.markerConstraints = leaflet.latLngBounds(resolvedConfig.markerConstraints) //[[bottom, left], [top, right]]\n\t\t}\n\t\tif (resolvedConfig.markerConstraints != null && typeof resolvedConfig.markerConstraints === 'function') {\n\t\t\tresolvedConfig.markerConstraintsMatcher = resolvedConfig.markerConstraints\n\t\t}\n\t\tif (resolvedConfig.markerConstraints != null && resolvedConfig.markerConstraintsMatcher == null) {\n\t\t\tresolvedConfig.markerConstraintsMatcher = function (marker) {\n\t\t\t\treturn resolvedConfig.markerConstraints.contains(marker.latLng)\n\t\t\t}\n\t\t}\n\t},\n\n\t_checkForUndefaultedProperties: function (newConfig, source) {\n\t\tfor (var property in newConfig) {\n\t\t\tif (newConfig.hasOwnProperty(property) && !defaults.hasOwnProperty(property)) {\n\t\t\t\tconsole.warn('Property \"' + property + '\" (set from ' + source + ') should have a default')\n\t\t\t}\n\t\t}\n\t},\n\n\t_getSavedConfig: function () {\n\t\tif (localStorage !== undefined) {\n\t\t\tvar saved = localStorage.getItem(this._storageId)\n\t\t\tif (saved != null) {\n\t\t\t\treturn JSON.parse(saved)\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t},\n\n\tpersist: function (options) {\n\t\tif (localStorage !== undefined) {\n\t\t\tvar saved = this._getSavedConfig()\n\t\t\tif (saved != null) {\n\t\t\t\toptions = $.extend({}, saved, options)\n\t\t\t}\n\t\t\tlocalStorage.setItem(this._storageId, JSON.stringify(options))\n\t\t}\n\t}\n})\n\nexport default Config\n","//heavily borrowed from www.movable-type.co.uk/scripts/latlong-gridref.html (MIT licence)\nimport proj4 from 'proj4'\n\nvar osgbProj = proj4(\n\t'+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs'\n)\n\nfunction pad(num, w) {\n\tvar n = num.toString()\n\twhile (n.length < w) n = '0' + n\n\treturn n\n}\n\nexport default {\n\tlatLngToGridRef: function (lat, lng) {\n\t\tvar digits = 10\n\n\t\tvar out = osgbProj.forward([lng, lat]) //from WSG84\n\t\tvar eastings = out[0]\n\t\tvar northings = out[1]\n\n\t\tdigits = digits === undefined ? 10 : Number(digits)\n\t\tif (isNaN(digits)) throw new Error('Invalid precision')\n\n\t\tvar e = Number(Number(eastings))\n\t\tvar n = Number(Number(northings))\n\n\t\tif (isNaN(e) || isNaN(n)) throw new Error('Invalid grid reference: ' + [lat, lng])\n\n\t\t// use digits = 0 to return numeric format (in metres)\n\t\tif (digits === 0) return pad(e, 6) + ',' + pad(n, 6)\n\n\t\t// get the 100km-grid indices\n\t\tvar e100k = Math.floor(e / 100000),\n\t\t\tn100k = Math.floor(n / 100000)\n\n\t\tif (e100k < 0 || e100k > 6 || n100k < 0 || n100k > 12) return ''\n\n\t\t// translate those into numeric equivalents of the grid letters\n\t\tvar l1 = 19 - n100k - ((19 - n100k) % 5) + Math.floor((e100k + 10) / 5)\n\t\tvar l2 = (((19 - n100k) * 5) % 25) + (e100k % 5)\n\n\t\t// compensate for skipped 'I' and build grid letter-pairs\n\t\tif (l1 > 7) l1++\n\t\tif (l2 > 7) l2++\n\t\tvar letPair = String.fromCharCode(l1 + 'A'.charCodeAt(0), l2 + 'A'.charCodeAt(0))\n\n\t\t// strip 100km-grid indices from easting & northing, and reduce precision\n\t\te = Math.floor((e % 100000) / Math.pow(10, 5 - digits / 2))\n\t\tn = Math.floor((n % 100000) / Math.pow(10, 5 - digits / 2))\n\n\t\tvar gridRef = letPair + ' ' + pad(e, digits / 2) + ' ' + pad(n, digits / 2)\n\n\t\treturn gridRef\n\t},\n\n\tosgbToLngLat: function (eastings, northings) {\n\t\tvar out = osgbProj.inverse([eastings, northings]) //to WSG84\n\t\treturn out\n\t},\n\n\tgridRefToOsgb: function (/*String*/ gridref) {\n\t\tgridref = String(gridref).trim()\n\t\tthis._determineGridRefType(gridref)\n\n\t\t// check for fully numeric comma-separated gridref format\n\t\tvar match = gridref.match(/^(\\d+),\\s*(\\d+)$/)\n\t\tif (match) return new OsGridRef(match[1], match[2])\n\n\t\t// validate format\n\t\tmatch = gridref.match(/^[A-Z]{2}\\s*[0-9]+\\s*[0-9]+$/i)\n\t\tif (!match) throw new Error('Invalid grid reference: ' + gridref)\n\n\t\t// get numeric values of letter references, mapping A->0, B->1, C->2, etc:\n\t\tvar l1 = gridref.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0)\n\t\tvar l2 = gridref.toUpperCase().charCodeAt(1) - 'A'.charCodeAt(0)\n\t\t// shuffle down letters after 'I' since 'I' is not used in grid:\n\t\tif (l1 > 7) l1--\n\t\tif (l2 > 7) l2--\n\n\t\t// convert grid letters into 100km-square indexes from false origin (grid square SV):\n\t\tvar e100km = ((l1 - 2) % 5) * 5 + (l2 % 5)\n\t\tvar n100km = 19 - Math.floor(l1 / 5) * 5 - Math.floor(l2 / 5)\n\n\t\t// skip grid letters to get numeric (easting/northing) part of ref\n\t\tvar en = gridref.slice(2).trim().split(/\\s+/)\n\t\t// if e/n not whitespace separated, split half way\n\t\tif (en.length == 1) en = [en[0].slice(0, en[0].length / 2), en[0].slice(en[0].length / 2)]\n\n\t\t//fix for grid refs technically part of the grid but outside of the uk\n\t\t//this helped to work this out: https://raw.githubusercontent.com/wu-lee/dinty/master/national-grid.png\n\t\tif (e100km >= 15) {\n\t\t\te100km -= 25\n\t\t}\n\t\tif (n100km > 20) {\n\t\t\tn100km -= 25\n\t\t}\n\n\t\t// validation\n\t\tif (e100km < -10 || n100km < -5)\n\t\t\tthrow new Error('Invalid grid reference: gridref=' + gridref + ', e100km=' + e100km + ', n100km=' + n100km)\n\t\tif (en.length != 2) throw new Error('Invalid grid reference: ' + gridref)\n\t\tif (en[0].length != en[1].length) throw new Error('Invalid grid reference: ' + gridref)\n\n\t\t// standardise to 10-digit refs (metres)\n\t\ten[0] = (en[0] + '00000').slice(0, 5)\n\t\ten[1] = (en[1] + '00000').slice(0, 5)\n\n\t\tvar e = parseInt(e100km + '00000') + parseInt(en[0])\n\t\tvar n = parseInt(n100km + '00000') + parseInt(en[1])\n\n\t\treturn [e, n]\n\t},\n\n\tgridRefToLngLat: function (/*String*/ gridref) {\n\t\tvar lngLat = this.gridRefToOsgb(gridref)\n\t\tvar out = osgbProj.inverse(lngLat) //to WSG84\n\t\treturn out\n\t},\n\n\t_determineGridRefType: function (gridref) {\n\t\tif (/^\\w\\s*\\d{3,}\\s*\\d{3,}$/.test(gridref)) {\n\t\t\tthrow new Error('Irish grid references currently unsupported: ' + gridref)\n\t\t}\n\t}\n}\n","export default window //if it isn't window, we'll be stubbing this module anyway\n","import global from './global.js'\nimport leaflet from 'VendorWrappers/leaflet.js'\n\nvar ParamChecker = leaflet.Class.extend({\n\tinitialize: function () {\n\t\tthis.update()\n\t},\n\n\tupdate: function () {\n\t\tthis._params = {}\n\t\tvar search = global.location.search\n\t\tif (search.length > 0) {\n\t\t\tsearch = search.substr(1)\n\t\t\tvar paramString = search.split('&')\n\t\t\tparamString.forEach(\n\t\t\t\tfunction (item) {\n\t\t\t\t\tvar tmp = item.split('=')\n\t\t\t\t\tthis._params[tmp[0]] = decodeURIComponent(tmp[1])\n\t\t\t\t}.bind(this)\n\t\t\t)\n\t\t}\n\t},\n\n\tgetParams: function () {\n\t\treturn this._params\n\t},\n\n\ttest: function (key) {\n\t\treturn this._params[key]\n\t}\n})\n\nvar defaultInstance = new ParamChecker()\nexport default {\n\t//bit dirty, but 'test' function makes it easy to check params, while the 'tester' gives you a class you can instantiate to check stuff at the relevant time.\n\ttest: function (key) {\n\t\treturn defaultInstance.test(key)\n\t},\n\ttester: ParamChecker\n}\n","import leaflet from 'leaflet'\n\nimport 'leaflet/dist/leaflet.css'\n\n// workaround for https://github.com/Leaflet/Leaflet/issues/4968\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport retinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\n\ndelete leaflet.Icon.Default.prototype._getIconUrl\n\nleaflet.Icon.Default.mergeOptions({\n\ticonRetinaUrl: retinaUrl,\n\ticonUrl: iconUrl,\n\tshadowUrl: shadowUrl\n})\n\nexport default leaflet\n","import {assert} from 'chai'\n\nimport Config from '../src/js/config.js'\n\ndescribe('config', function () {\n\tbefore(function () {\n\t\tif (localStorage !== undefined) {\n\t\t\tlocalStorage.clear()\n\t\t}\n\t})\n\tit('should inherit defaults', function () {\n\t\tvar config = new Config()\n\t\tassert.equal(true, config.cluster)\n\t\tassert.equal(false, config.dimensional_layering)\n\t\tassert.equal(undefined, config.blah)\n\t\tassert.notOk(config.hasOwnProperty('blah'))\n\t})\n\tit('defaults can be overridden', function () {\n\t\tvar config = new Config({\n\t\t\tcluster: false,\n\t\t\tblah: 'stuff'\n\t\t})\n\t\tassert.equal(false, config.cluster)\n\t\tassert.equal(false, config.dimensional_layering)\n\t\tassert.equal('stuff', config.blah)\n\t\tassert.ok(config.hasOwnProperty('blah'))\n\t})\n\tdescribe('persistence', function () {\n\t\tit('can save and retrieve', function () {\n\t\t\tvar config = new Config({\n\t\t\t\tblah: 4\n\t\t\t})\n\t\t\tassert.equal(4, config.blah)\n\t\t\tconfig.persist({\n\t\t\t\tblah: 5\n\t\t\t})\n\t\t\tassert.equal(4, config.blah) //should still be 4 - persisting shouldn't change the retrieved values until we reload the page\n\t\t\tvar config2 = new Config({\n\t\t\t\tblah: 4\n\t\t\t})\n\t\t\tassert.equal(5, config2.blah) //saved value should override the value from config\n\t\t})\n\t\tit('can save and retrieve with null options', function () {\n\t\t\tvar config = new Config()\n\t\t\tconfig.persist({\n\t\t\t\tblah: 5\n\t\t\t})\n\t\t\tvar config2 = new Config()\n\t\t\tassert.equal(5, config2.blah) //saved value should now be available\n\t\t})\n\t\tit('can force override', function () {\n\t\t\tvar config = new Config()\n\t\t\tconfig.persist({\n\t\t\t\tblah: 5\n\t\t\t})\n\t\t\tvar config2 = new Config({\n\t\t\t\tforce_config_override: true,\n\t\t\t\tblah: 4\n\t\t\t})\n\t\t\tassert.equal(4, config2.blah) //passed-in value should override saved value\n\t\t})\n\t\tit('saving is for a given page id', function () {\n\t\t\t//set up\n\t\t\tvar config1 = new Config({\n\t\t\t\tpage_id: 'abc'\n\t\t\t})\n\t\t\tconfig1.persist({\n\t\t\t\tblah: 5\n\t\t\t})\n\t\t\tvar config2 = new Config({\n\t\t\t\tpage_id: 'xyz'\n\t\t\t})\n\t\t\tconfig2.persist({\n\t\t\t\tblah: 6\n\t\t\t})\n\t\t\t//test\n\t\t\tvar newConfig1 = new Config({\n\t\t\t\tpage_id: 'abc'\n\t\t\t})\n\t\t\tvar newConfig2 = new Config({\n\t\t\t\tpage_id: 'xyz'\n\t\t\t})\n\t\t\tassert.equal(5, newConfig1.blah)\n\t\t\tassert.equal(6, newConfig2.blah)\n\t\t})\n\t})\n})\n"],"names":["defaultPageId","location","pathname","split","pop","defaults","baseUrl","window","geoBaggingBaseUrl","map_style","cluster","dimensional_layering","initial_zoom","start_position","force_config_override","map_element_id","map_outer_container_element","page_id","show_zoom_control","show_selection_control","show_search_control","show_locate_control","show_layers_control","show_position_control","show_hider_control","use_sidebar","hider_control_start_visible","icons","dimensionNames","dimensionValueLabels","defaultLayer","markerConstraints","extend","initialize","options","configBundles","resolvedConfig","this","_checkForUndefaultedProperties","bundles","_storageId","saved","_getSavedConfig","property","test","_buildMarkerConstraints","hasOwnProperty","constraintsString","points","tlLat","tlLng","brLat","brLng","length","topLeft","gridRefToLngLat","bottomRight","parseFloat","Array","isArray","markerConstraintsMatcher","marker","contains","latLng","newConfig","source","console","warn","undefined","localStorage","getItem","JSON","parse","persist","setItem","stringify","osgbProj","pad","num","w","n","toString","latLngToGridRef","lat","lng","digits","out","forward","eastings","northings","Number","isNaN","Error","e","e100k","Math","floor","n100k","l1","l2","letPair","String","fromCharCode","charCodeAt","pow","osgbToLngLat","inverse","gridRefToOsgb","gridref","trim","_determineGridRefType","match","OsGridRef","toUpperCase","e100km","n100km","en","slice","parseInt","lngLat","ParamChecker","Class","update","_params","search","substr","forEach","item","tmp","decodeURIComponent","bind","getParams","key","defaultInstance","tester","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","describe","before","clear","it","config","equal","blah","notOk","ok","config2","newConfig1","newConfig2"],"sourceRoot":""}