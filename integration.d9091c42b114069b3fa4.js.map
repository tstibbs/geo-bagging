{"version":3,"file":"integration.d9091c42b114069b3fa4.js","mappings":"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","sources":["webpack://@tstibbs/geo-bagging-ui/./src/js/integration/tuk.js","webpack://@tstibbs/geo-bagging-ui/./src/js/entry/integration.js"],"sourcesContent":["import $ from 'jquery'\nimport conversion from '@tstibbs/geo-bagging-shared/conversion.js'\nimport mapLoader from '../map_loader.js'\nimport constants from '../constants.js'\n\nexport default {\n\tshowMap: function () {\n\t\tif (/^https?:\\/\\/trigpointing\\.uk\\/trig\\/\\d+/.test(window.location.href)) {\n\t\t\t//e.g. http://trigpointing.uk/trig/2614 - single trig page\n\t\t\tthis.embedSingleMap()\n\t\t} else if (/^https?:\\/\\/trigpointing\\.uk\\/trigs\\/view-trigs\\.php.*/.test(window.location.href)) {\n\t\t\t//e.g. http://trigpointing.uk/trigs/view-trigs.php?q=2168478 - detailed search page\n\t\t\tthis.showMapForSearch()\n\t\t} else if (/^https?:\\/\\/trigpointing\\.uk\\/trigtools\\/find.php.*/.test(window.location.href)) {\n\t\t\t//e.g. http://trigpointing.uk/trigtools/find.php?t=milton - 'quick search' page (not supported)\n\t\t\talert(\n\t\t\t\t\"Map display not supported on this page, please use the 'detailed search' page instead: http://trigpointing.uk/trigs/\"\n\t\t\t)\n\t\t} else {\n\t\t\talert('Map display not supported on this page.')\n\t\t}\n\t},\n\n\tshowMapForSearch: function () {\n\t\tthis.getPointsFromSearch(window.location.search, function (points) {\n\t\t\tvar options = {\n\t\t\t\tpointsToLoad: {\n\t\t\t\t\tgeneralPoints: points\n\t\t\t\t},\n\t\t\t\tforce_config_override: true,\n\t\t\t\tuse_sidebar: false\n\t\t\t}\n\n\t\t\t$('body').empty() //our map assumes it is full screen - there's probably a better way, but this will work for now\n\t\t\tvar osMapPromise = mapLoader.loadMap(options)\n\t\t\tosMapPromise.done(function (manager) {\n\t\t\t\t//now get the map showing everything\n\t\t\t\tvar minEastings\n\t\t\t\tvar maxEastings\n\t\t\t\tvar minNorthings\n\t\t\t\tvar maxNorthings\n\n\t\t\t\tvar latLngs = points.forEach(function (point) {\n\t\t\t\t\tvar eastings = point.eastings\n\t\t\t\t\tvar northings = point.northings\n\t\t\t\t\tif (minEastings == null || eastings < minEastings) {\n\t\t\t\t\t\tminEastings = eastings\n\t\t\t\t\t}\n\t\t\t\t\tif (maxEastings == null || eastings > maxEastings) {\n\t\t\t\t\t\tmaxEastings = eastings\n\t\t\t\t\t}\n\t\t\t\t\tif (minNorthings == null || northings < minNorthings) {\n\t\t\t\t\t\tminNorthings = northings\n\t\t\t\t\t}\n\t\t\t\t\tif (maxNorthings == null || northings > maxNorthings) {\n\t\t\t\t\t\tmaxNorthings = northings\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tvar bottomLeft = conversion.osgbToLngLat(minEastings, minNorthings)\n\t\t\t\tvar topRight = conversion.osgbToLngLat(maxEastings, maxNorthings)\n\t\t\t\tmanager.getMap().fitBounds([\n\t\t\t\t\t[bottomLeft[1], bottomLeft[0]],\n\t\t\t\t\t[topRight[1], topRight[0]]\n\t\t\t\t])\n\t\t\t})\n\t\t})\n\t},\n\n\tembedSingleMap: function () {\n\t\tvar centreGridRef = $(\"div:contains('Grid reference : '):not(:has(*)) + div a\").text()\n\t\tvar lngLat = conversion.gridRefToLngLat(centreGridRef)\n\t\tvar lng = lngLat[0]\n\t\tvar lat = lngLat[1]\n\n\t\tconst fetchSearchResults = searchUrl => {\n\t\t\t$.ajax(searchUrl).done(\n\t\t\t\tfunction (res, status, xhr) {\n\t\t\t\t\tvar $searchResult = $($.parseHTML(res))\n\t\t\t\t\tvar flashLink = $searchResult.find(\"a:contains('Interactive Map')\").attr('href')\n\t\t\t\t\tvar suffix = '?' + flashLink.split('?')[1]\n\t\t\t\t\tthis.getPointsFromSearch(suffix, function (points) {\n\t\t\t\t\t\tvar mapDiv = $('map[name=\"trigmap\"]').parent()\n\t\t\t\t\t\tmapDiv.empty()\n\n\t\t\t\t\t\t//get 'this' trig id\n\t\t\t\t\t\tvar id = window.location.pathname.split(/\\//).pop()\n\t\t\t\t\t\tid = /0*([^0].*)/.exec(id)[1] //strip any leading zeros\n\n\t\t\t\t\t\tvar significantPoint = null\n\t\t\t\t\t\tpoints = points.filter(function (point) {\n\t\t\t\t\t\t\tif (point.id == id) {\n\t\t\t\t\t\t\t\tsignificantPoint = point\n\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tvar options = {\n\t\t\t\t\t\t\tmap_style: 'mini_embedded',\n\t\t\t\t\t\t\tcluster: false,\n\t\t\t\t\t\t\thider_control_start_visible: false,\n\t\t\t\t\t\t\tshow_hider_control: true,\n\t\t\t\t\t\t\tstart_position: [lat, lng],\n\t\t\t\t\t\t\tmap_outer_container_element: mapDiv,\n\t\t\t\t\t\t\tpointsToLoad: {\n\t\t\t\t\t\t\t\tsignificantPoint: significantPoint,\n\t\t\t\t\t\t\t\tgeneralPoints: points\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tforce_config_override: true,\n\t\t\t\t\t\t\tinitial_zoom: 13,\n\t\t\t\t\t\t\tuse_sidebar: false\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmapLoader.loadMap(options)\n\t\t\t\t\t})\n\t\t\t\t}.bind(this)\n\t\t\t)\n\t\t}\n\t\tvar searchUrl = $(\"a:contains('trigpoints')\").attr('href')\n\t\tlet matches = searchUrl.match(/^\\/trigs\\/search-parse.php\\?trig=([\\d\\w]+)$/)\n\t\tif (matches != null) {\n\t\t\t//if the URL is in the format that our redirector service can handle\n\t\t\tlet redirectFetcherUrl = `${constants.integrationBackendBaseUrl}trigs/search-parse.php/${matches[1]}`\n\t\t\t$.ajax(redirectFetcherUrl)\n\t\t\t\t.done((res, status, xhr) => {\n\t\t\t\t\tif (res.redirectTo != null && res.redirectTo.length > 0) {\n\t\t\t\t\t\tsearchUrl = res.redirectTo\n\t\t\t\t\t}\n\t\t\t\t\tfetchSearchResults(searchUrl) //may hit https/cors issues, but worth trying if we've failed to get an alternative URL\n\t\t\t\t})\n\t\t\t\t.fail(error => {\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t\tfetchSearchResults(searchUrl) //may hit https/cors issues, but worth trying if we've failed to get an alternative URL\n\t\t\t\t})\n\t\t} else {\n\t\t\tfetchSearchResults(searchUrl) //may hit https/cors issues, but worth trying if we've failed to get an alternative URL\n\t\t}\n\t},\n\n\tgetPointsFromSearch: function (suffix, callback) {\n\t\t$.get('/trigs/down-flash.php' + suffix, function (data, textStatus, jqXHR) {\n\t\t\tvar regex = /Showing trigpoints \\d+ to \\d+ of (\\d+)/g\n\t\t\tvar allText = $('body').text()\n\n\t\t\tvar showMap\n\t\t\tif (regex.test(allText) && parseInt(regex.exec(allText)[1]) > 1000) {\n\t\t\t\tshowMap = confirm('Map will only display the first 1000 points, are you sure you want to continue?')\n\t\t\t} else {\n\t\t\t\tshowMap = true\n\t\t\t}\n\n\t\t\tif (showMap === true) {\n\t\t\t\tvar decodedXmlString = decodeURIComponent(data)\n\t\t\t\tvar dom = $($.parseXML(decodedXmlString))\n\t\t\t\tvar points = dom\n\t\t\t\t\t.find('C')\n\t\t\t\t\t.map(function (i, element) {\n\t\t\t\t\t\t//e.g. <C D='Castlebythe Barrow' I='2041' E='202873' N='229647' F='n'/>\n\t\t\t\t\t\tvar point = $(element)\n\t\t\t\t\t\tvar id = point.attr('I')\n\t\t\t\t\t\tvar url = 'http://trigpointing.uk/trig/' + id\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\teastings: parseInt(point.attr('E')),\n\t\t\t\t\t\t\tnorthings: parseInt(point.attr('N')),\n\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\tname: point.attr('D')\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.toArray()\n\t\t\t\tcallback(points)\n\t\t\t}\n\t\t})\n\t}\n}\n","import './entry_shared.js'\n\nimport tukIntegration from '../integration/tuk.js'\ntukIntegration.showMap()\n"],"names":["showMap","test","window","location","href","this","embedSingleMap","showMapForSearch","alert","getPointsFromSearch","search","points","options","pointsToLoad","generalPoints","force_config_override","use_sidebar","empty","loadMap","done","manager","forEach","point","eastings","northings","minEastings","maxEastings","minNorthings","maxNorthings","bottomLeft","conversion","osgbToLngLat","topRight","getMap","fitBounds","centreGridRef","text","lngLat","gridRefToLngLat","lng","lat","fetchSearchResults","searchUrl","res","status","xhr","suffix","find","attr","split","mapDiv","parent","id","pathname","pop","exec","significantPoint","filter","map_style","cluster","hider_control_start_visible","show_hider_control","start_position","map_outer_container_element","initial_zoom","bind","matches","match","redirectFetcherUrl","constants","integrationBackendBaseUrl","redirectTo","length","fail","error","console","callback","data","textStatus","jqXHR","regex","allText","parseInt","confirm","decodedXmlString","decodeURIComponent","map","i","element","url","name","toArray"],"sourceRoot":""}