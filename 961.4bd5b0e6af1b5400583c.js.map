{"version":3,"file":"961.4bd5b0e6af1b5400583c.js","mappings":"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","sources":["webpack://@tstibbs/geo-bagging-ui/./src/js/utils/geojson.js","webpack://@tstibbs/geo-bagging-ui/./src/js/vendor-wrappers/leaflet.js","webpack://@tstibbs/geo-bagging-ui/./test/utils/geojson_test.js"],"sourcesContent":["import leaflet from 'VendorWrappers/leaflet.js'\nimport {gpx as toGeoJSON} from '@tmcw/togeojson'\nimport {polygon, bbox} from '@turf/turf'\n\nexport function calcGeoJsonBounds(geoJson) {\n\tlet {features} = geoJson\n\tif (geoJson.type !== 'FeatureCollection') {\n\t\tfeatures = [geoJson]\n\t}\n\t//margin for the bounding box:\n\tconst latAdjustment = 0.005\n\tconst lngAdjustment = 0.01\n\tlet polygons = features.map(function (feature) {\n\t\tconst [minLng, minLat, maxLng, maxLat] = bbox(feature)\n\t\tlet top = maxLat + latAdjustment\n\t\tlet bottom = minLat - latAdjustment\n\t\tlet left = minLng - lngAdjustment\n\t\tlet right = maxLng + lngAdjustment\n\t\tlet polygonCoords = [\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom],\n\t\t\t[left, bottom],\n\t\t\t[left, top]\n\t\t]\n\t\treturn polygon([polygonCoords])\n\t})\n\treturn polygons\n}\n\nexport function rawGpxToGeoJson(gpxAsString) {\n\t//xml editing in nodejs is hard, so quick and dirty replace for common mistake in gpx files (url tag with value used instead of link tag with attribute)\n\tgpxAsString = gpxAsString.replace(/<url( [^>]+)?>(.+)<\\/url>/g, `<link href=\"$2\"></link>`)\n\tvar dom = new DOMParser().parseFromString(gpxAsString, 'text/xml')\n\tvar geoJson = toGeoJSON(dom)\n\tlet multiBounds = calcGeoJsonBounds(geoJson)\n\treturn {\n\t\tfeatures: geoJson,\n\t\tbounds: multiBounds\n\t}\n}\n\nexport function rawGeoJsonToGeoJson(geojsonAsString) {\n\tlet parsed = JSON.parse(geojsonAsString)\n\tlet multiBounds = calcGeoJsonBounds(parsed)\n\treturn {\n\t\tfeatures: parsed,\n\t\tbounds: multiBounds\n\t}\n}\n\nexport function geoJsonCoordsToLeaflet(geojsonCoords) {\n\treturn leaflet.GeoJSON.coordsToLatLngs(geojsonCoords)\n}\n\nexport function geoJsonBoundsToLeaflet(bounds) {\n\treturn bounds.map(polygon => {\n\t\tconst coordinates = geoJsonCoordsToLeaflet(polygon.geometry.coordinates[0])\n\t\tconst bound = new leaflet.LatLngBounds()\n\t\tfor (const coord of coordinates) {\n\t\t\tbound.extend(coord)\n\t\t}\n\t\treturn bound\n\t})\n}\n","import leaflet from 'leaflet'\n\nimport 'leaflet/dist/leaflet.css'\n\n// workaround for https://github.com/Leaflet/Leaflet/issues/4968\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport retinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\n\ndelete leaflet.Icon.Default.prototype._getIconUrl\n\nleaflet.Icon.Default.mergeOptions({\n\ticonRetinaUrl: retinaUrl,\n\ticonUrl: iconUrl,\n\tshadowUrl: shadowUrl\n})\n\nexport default leaflet\n","import {expect} from 'chai'\nimport {calcGeoJsonBounds} from '../../src/js/utils/geojson.js'\nimport largeExampleInput from './geojson_test-input.json'\nimport largeExampleExpectedBounds from './geojson_test-expected.json'\n\nconst POINT_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'Point',\n\t\tcoordinates: [102.0, 0.5]\n\t},\n\tproperties: {}\n}\nconst POINT_FEATURE_BOUNDS = boundsOf([\n\t[102.0 - 0.01, 0.5 + 0.005],\n\t[102.0 + 0.01, 0.5 + 0.005],\n\t[102.0 + 0.01, 0.5 - 0.005],\n\t[102.0 - 0.01, 0.5 - 0.005],\n\t[102.0 - 0.01, 0.5 + 0.005]\n])\nconst LINE_STRING_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'LineString',\n\t\tcoordinates: [\n\t\t\t[102.0, 0.0],\n\t\t\t[103.0, 1.0],\n\t\t\t[104.0, 0.0],\n\t\t\t[105.0, 1.0]\n\t\t]\n\t},\n\tproperties: {}\n}\nconst LINE_STRING_FEATURE_BOUNDS = boundsOf([\n\t[102.0 - 0.01, 1.0 + 0.005],\n\t[105.0 + 0.01, 1.0 + 0.005],\n\t[105.0 + 0.01, 0.0 - 0.005],\n\t[102.0 - 0.01, 0.0 - 0.005],\n\t[102.0 - 0.01, 1.0 + 0.005]\n])\nconst POLYGON_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'Polygon',\n\t\tcoordinates: [\n\t\t\t[\n\t\t\t\t[100.0, 0.0],\n\t\t\t\t[101.0, 0.0],\n\t\t\t\t[101.0, 1.0],\n\t\t\t\t[100.0, 1.0],\n\t\t\t\t[100.0, 0.0]\n\t\t\t]\n\t\t]\n\t},\n\tproperties: {}\n}\nconst POLYGON_FEATURE_BOUNDS = boundsOf([\n\t[100.0 - 0.01, 1.0 + 0.005],\n\t[101.0 + 0.01, 1.0 + 0.005],\n\t[101.0 + 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 1.0 + 0.005]\n])\nconst MULTI_POINT_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'MultiPoint',\n\t\tcoordinates: [\n\t\t\t[100.0, 0.0],\n\t\t\t[101.0, 1.0]\n\t\t]\n\t},\n\tproperties: {}\n}\nconst MULTI_POINT_FEATURE_BOUNDS = boundsOf([\n\t[100.0 - 0.01, 1.0 + 0.005],\n\t[101.0 + 0.01, 1.0 + 0.005],\n\t[101.0 + 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 1.0 + 0.005]\n])\nconst MULTI_LINE_STRING_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'MultiLineString',\n\t\tcoordinates: [\n\t\t\t[\n\t\t\t\t[100.0, 0.0],\n\t\t\t\t[101.0, 1.0]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[102.0, 2.0],\n\t\t\t\t[103.0, 3.0]\n\t\t\t]\n\t\t]\n\t},\n\tproperties: {}\n}\nconst MULTI_LINE_STRING_FEATURE_BOUNDS = boundsOf([\n\t[100.0 - 0.01, 3.0 + 0.005],\n\t[103.0 + 0.01, 3.0 + 0.005],\n\t[103.0 + 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 0.0 - 0.005],\n\t[100.0 - 0.01, 3.0 + 0.005]\n])\nconst MULTI_POLYGON_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'MultiPolygon',\n\t\tcoordinates: [\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t[102.0, 2.0],\n\t\t\t\t\t[103.0, 2.0],\n\t\t\t\t\t[103.0, 3.0],\n\t\t\t\t\t[102.0, 3.0],\n\t\t\t\t\t[102.0, 2.0]\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t[100.0, 0.0],\n\t\t\t\t\t[101.0, 0.0],\n\t\t\t\t\t[101.0, 1.0],\n\t\t\t\t\t[100.0, 1.0],\n\t\t\t\t\t[100.0, 0.0]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t[100.2, -0.2],\n\t\t\t\t\t[100.2, 0.8],\n\t\t\t\t\t[106.8, 0.8],\n\t\t\t\t\t[106.8, -0.2],\n\t\t\t\t\t[100.2, -0.2]\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t},\n\tproperties: {}\n}\nconst MULTI_POLYGON_FEATURE_BOUNDS = boundsOf([\n\t[100.0 - 0.01, 3.0 + 0.005],\n\t[106.8 + 0.01, 3.0 + 0.005],\n\t[106.8 + 0.01, -0.2 - 0.005],\n\t[100.0 - 0.01, -0.2 - 0.005],\n\t[100.0 - 0.01, 3.0 + 0.005]\n])\nconst GEOM_COLLECTION_FEATURE = {\n\ttype: 'Feature',\n\tgeometry: {\n\t\ttype: 'GeometryCollection',\n\t\tgeometries: [\n\t\t\t{\n\t\t\t\ttype: 'Point',\n\t\t\t\tcoordinates: [100.0, -4.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'LineString',\n\t\t\t\tcoordinates: [\n\t\t\t\t\t[101.0, 0.0],\n\t\t\t\t\t[102.0, 1.0]\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\tproperties: {}\n}\nconst GEOM_COLLECTION_FEATURE_BOUNDS = boundsOf([\n\t[100.0 - 0.01, 1.0 + 0.005],\n\t[102.0 + 0.01, 1.0 + 0.005],\n\t[102.0 + 0.01, -4.0 - 0.005],\n\t[100.0 - 0.01, -4.0 - 0.005],\n\t[100.0 - 0.01, 1.0 + 0.005]\n])\n\nfunction boundsOf(bounds) {\n\treturn {\n\t\ttype: 'Feature',\n\t\tproperties: {},\n\t\tgeometry: {\n\t\t\ttype: 'Polygon',\n\t\t\tcoordinates: [bounds]\n\t\t}\n\t}\n}\n\nfunction featureCollectionOf(...features) {\n\treturn {\n\t\ttype: 'FeatureCollection',\n\t\tfeatures: features\n\t}\n}\n\ndescribe('calcGeoJsonBounds', function () {\n\tit('handle collection of Point features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(POINT_FEATURE)\n\t\tconst expectedBounds = [POINT_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\tconsole.log(JSON.stringify(expectedBounds))\n\t\tconsole.log(JSON.stringify(result))\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of LineString features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(LINE_STRING_FEATURE)\n\t\tconst expectedBounds = [LINE_STRING_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of Polygon features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(POLYGON_FEATURE)\n\t\tconst expectedBounds = [POLYGON_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of MultiPoint features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(MULTI_POINT_FEATURE)\n\t\tconst expectedBounds = [MULTI_POINT_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of MultiLineString features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(MULTI_LINE_STRING_FEATURE)\n\t\tconst expectedBounds = [MULTI_LINE_STRING_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of MultiPolygon features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(MULTI_POLYGON_FEATURE)\n\t\tconst expectedBounds = [MULTI_POLYGON_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle collection of GeometryCollection features', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(GEOM_COLLECTION_FEATURE)\n\t\tconst expectedBounds = [GEOM_COLLECTION_FEATURE_BOUNDS]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handle multiple features in a collection', function () {\n\t\tconst geoJsonFeatures = featureCollectionOf(\n\t\t\tPOINT_FEATURE,\n\t\t\tLINE_STRING_FEATURE,\n\t\t\tPOLYGON_FEATURE,\n\t\t\tMULTI_POINT_FEATURE,\n\t\t\tMULTI_LINE_STRING_FEATURE,\n\t\t\tMULTI_POLYGON_FEATURE,\n\t\t\tGEOM_COLLECTION_FEATURE\n\t\t)\n\t\tconst expectedBounds = [\n\t\t\tPOINT_FEATURE_BOUNDS,\n\t\t\tLINE_STRING_FEATURE_BOUNDS,\n\t\t\tPOLYGON_FEATURE_BOUNDS,\n\t\t\tMULTI_POINT_FEATURE_BOUNDS,\n\t\t\tMULTI_LINE_STRING_FEATURE_BOUNDS,\n\t\t\tMULTI_POLYGON_FEATURE_BOUNDS,\n\t\t\tGEOM_COLLECTION_FEATURE_BOUNDS\n\t\t]\n\n\t\tconst result = calcGeoJsonBounds(geoJsonFeatures)\n\t\texpect(result).to.deep.equal(expectedBounds)\n\t})\n\n\tit('handles large inputs', function () {\n\t\tconst result = calcGeoJsonBounds(largeExampleInput)\n\t\texpect(result).to.deep.equal(largeExampleExpectedBounds)\n\t}).timeout(5000)\n\n\tdescribe('handles things other than a collection', function () {\n\t\tit('point', function () {\n\t\t\tconst result = calcGeoJsonBounds(POINT_FEATURE)\n\t\t\texpect(result).to.deep.equal([POINT_FEATURE_BOUNDS])\n\t\t})\n\t\tit('line string', function () {\n\t\t\tconst result = calcGeoJsonBounds(LINE_STRING_FEATURE)\n\t\t\texpect(result).to.deep.equal([LINE_STRING_FEATURE_BOUNDS])\n\t\t})\n\t\tit('polygon', function () {\n\t\t\tconst result = calcGeoJsonBounds(POLYGON_FEATURE)\n\t\t\texpect(result).to.deep.equal([POLYGON_FEATURE_BOUNDS])\n\t\t})\n\t\tit('multipoint', function () {\n\t\t\tconst result = calcGeoJsonBounds(MULTI_POINT_FEATURE)\n\t\t\texpect(result).to.deep.equal([MULTI_POINT_FEATURE_BOUNDS])\n\t\t})\n\t\tit('multi line string', function () {\n\t\t\tconst result = calcGeoJsonBounds(MULTI_LINE_STRING_FEATURE)\n\t\t\texpect(result).to.deep.equal([MULTI_LINE_STRING_FEATURE_BOUNDS])\n\t\t})\n\t\tit('multi polygon', function () {\n\t\t\tconst result = calcGeoJsonBounds(MULTI_POLYGON_FEATURE)\n\t\t\texpect(result).to.deep.equal([MULTI_POLYGON_FEATURE_BOUNDS])\n\t\t})\n\t\tit('geom', function () {\n\t\t\tconst result = calcGeoJsonBounds(GEOM_COLLECTION_FEATURE)\n\t\t\texpect(result).to.deep.equal([GEOM_COLLECTION_FEATURE_BOUNDS])\n\t\t})\n\t})\n})\n"],"names":["calcGeoJsonBounds","geoJson","features","type","map","feature","minLng","minLat","maxLng","maxLat","top","bottom","left","right","polygonCoords","rawGpxToGeoJson","gpxAsString","replace","dom","DOMParser","parseFromString","bounds","rawGeoJsonToGeoJson","geojsonAsString","parsed","JSON","parse","geoJsonCoordsToLeaflet","geojsonCoords","GeoJSON","coordsToLatLngs","geoJsonBoundsToLeaflet","polygon","coordinates","geometry","bound","LatLngBounds","coord","extend","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","POINT_FEATURE","properties","POINT_FEATURE_BOUNDS","boundsOf","LINE_STRING_FEATURE","LINE_STRING_FEATURE_BOUNDS","POLYGON_FEATURE","POLYGON_FEATURE_BOUNDS","MULTI_POINT_FEATURE","MULTI_POINT_FEATURE_BOUNDS","MULTI_LINE_STRING_FEATURE","MULTI_LINE_STRING_FEATURE_BOUNDS","MULTI_POLYGON_FEATURE","MULTI_POLYGON_FEATURE_BOUNDS","GEOM_COLLECTION_FEATURE","geometries","GEOM_COLLECTION_FEATURE_BOUNDS","featureCollectionOf","describe","it","geoJsonFeatures","expectedBounds","result","console","log","stringify","to","deep","equal","timeout"],"sourceRoot":""}